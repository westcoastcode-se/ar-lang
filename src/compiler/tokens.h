#ifndef _ARC_TOKENS_H_
#define _ARC_TOKENS_H_

typedef enum arC_tokens
{
	ARTOK_UNKNOWN = 0,

	ARTOK_KEYWORD_FIRST,
	ARTOK_KEYWORD_IF = ARTOK_KEYWORD_FIRST,
	ARTOK_KEYWORD_FOR,
	ARTOK_KEYWORD_VAR,
	ARTOK_KEYWORD_FUNC,
	ARTOK_KEYWORD_TYPE,
	ARTOK_KEYWORD_ELSE,
	ARTOK_KEYWORD_CONST,
	ARTOK_KEYWORD_RETURN,
	ARTOK_KEYWORD_STRUCT,
	ARTOK_KEYWORD_IMPORT,
	ARTOK_KEYWORD_EXTERN,
	ARTOK_KEYWORD_PACKAGE,
	ARTOK_KEYWORD_INTERFACE,
	ARTOK_KEYWORD_LAST = ARTOK_KEYWORD_INTERFACE,

	ARTOK_VALUE_FIRST,
	ARTOK_VALUE_INT = ARTOK_VALUE_FIRST,
	ARTOK_VALUE_HEX,
	ARTOK_VALUE_BOOL,
	ARTOK_VALUE_DECIMAL,
	ARTOK_VALUE_STRING,
	ARTOK_VALUE_LAST = ARTOK_VALUE_STRING,

	// Identifier
	ARTOK_IDENTITY,

	ARTOK_COMMENT,

	ARTOK_OP_FIRST,
	// +
	ARTOK_OP_PLUS = ARTOK_OP_FIRST,
	// ++
	ARTOK_OP_INC,
	// -
	ARTOK_OP_MINUS,
	// --
	ARTOK_OP_DEC,
	// *
	ARTOK_OP_MULT,
	ARTOK_PTR = ARTOK_OP_MULT,
	// /
	ARTOK_OP_DIV,
	ARTOK_OP_LAST = ARTOK_OP_DIV,

	// |
	ARTOK_BIT_OR,
	// &
	ARTOK_BIT_AND,
	ARTOK_ADDR_OF = ARTOK_BIT_AND,
	// ~
	ARTOK_BIT_NOT,

	// ==
	ARTOK_TEST_EQ,
	// !=
	ARTOK_TEST_NEQ,
	// ||
	ARTOK_TEST_OR,
	// &&
	ARTOK_TEST_AND,
	// <
	ARTOK_TEST_LT,
	// <=
	ARTOK_TEST_LTE,
	// >
	ARTOK_TEST_GT,
	// >=
	ARTOK_TEST_GTW,

	// !
	ARTOK_NOT,

	// (
	ARTOK_PARAN_L,
	// )
	ARTOK_PARAN_R,

	// [
	ARTOK_SQUARE_L,
	// ]
	ARTOK_SQUARE_R,

	// {
	ARTOK_BRACKET_L,
	// }
	ARTOK_BRACKET_R,

	// ,
	ARTOK_COMMA,
	// .
	ARTOK_DOT,
	// :
	ARTOK_COLON,
	// =
	ARTOK_ASSIGN,
	// :=
	ARTOK_DECL_ASSIGN,

	// \n
	ARTOK_NEWLINE,

	// <EOF>
	ARTOK_EOF,

	// Number of tokens
	ARTOK_COUNT
} arC_tokens;

// Modifier
typedef enum arC_token_modifier
{
	ARTOK_MOD_NONE = 0,
} arC_token_modifier;

#endif
