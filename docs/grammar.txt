DIGIT:
	0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9

CHAR:
	[a-zA-Z_]

NUMBER:	
	DIGIT+

DECIMAL:
	NUMBER . NUMBER

STRING: 
	"*"

NEWLINE:
	\n

COMMENT: 
	// *

PLUS: 
	+

MINUS:
	-

MULT:
	*

DIV:
	/

PAREN_L:
	(

PAREN_R:
	)

NOT:
	!

keyword:
	KEYWORD:VAR IDENTIFIER = comp-expr |
	KEYWORD:IF comp-expr |
	KEYWORD:RETURN comp-expr |
	comp-expr

block:
	{ keyword* }

comp-expr:
	NOT comp-expr |
	expression ((LT|LTE|GT|GTE|EQUALS|NOT_EQUALS) expression)*

expression:
	term ((PLUS|MINUS) term)*

term:
	factor ((MULT|DIV) factor)*
	
factor:
	(PLUS|MINUS) factor |
	atom

atom:
	(PLUS|MINUS) atom |
	NUMBER |
	DECIMAL |
	STRING |
	CHAR |
	IDENTIFIER |
	PAREN_L expression PAREN_R |
	block |
